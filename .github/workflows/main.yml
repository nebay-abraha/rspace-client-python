name: CodeQL, Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  analyze:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone rspace-docker repository
        run: |
          git clone --branch main https://github.com/nebay-abraha/rspace-docker.git

      - name: Download rspace.war
        run: |
          curl -L -o rspace-docker/rspace.war https://github.com/rspace-os/rspace-web/releases/download/2.4.0/researchspace-2.4.0.war

      - name: Run Docker Info
        run: |
          docker info

      - name: Start Docker Compose
        working-directory: rspace-docker
        run: |
          docker compose up -d

      - name: Run Healthcheck
        working-directory: rspace-docker
        run: |
          max_attempts=30
          attempt=0
          until docker inspect --format "{{json .State.Health.Status }}" rspace-db | grep -q "healthy"; do
            if [ $attempt -ge $max_attempts ]; then
              echo "Max attempts reached, database health check failed"
              exit 1
            fi
            echo "Waiting for database to be healthy... Attempt $((attempt+1))"
            attempt=$((attempt+1))
            sleep 5
          done
          echo "Database is healthy!"

      - name: Set up Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> $GITHUB_ENV
          source $GITHUB_ENV

      - name: Install dependencies with Poetry
        run: poetry install

#      - name: Set environment variables
#        env:
#          RSPACE_URL: "http://localhost:8080"
#          RSPACE_API_KEY: ${{ secrets.RSPACE_API_KEY }}
#        run: echo "Environment variables set"

      - name: Run Grid Container Test
        run: |
          poetry run pytest rspace_client/tests/grid_container_test.py
